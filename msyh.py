# Code generated by font_to_py.py.
# Font: msyh.ttf Char set: .中录播放音
# Cmd: C:\Users\Administrator\code\esp32-s3-project\.venv\Scripts\font_to_py .\font\msyh.ttf 16 msyh.py -c 录音播放中.
version = '0.42'

def height():
    return 16

def baseline():
    return 14

def max_width():
    return 17

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 46

def max_ch():
    return 38899

_font =\
b'\x08\x00\x00\x3c\x7f\x47\x03\x03\x06\x0c\x18\x18\x18\x00\x18\x18'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x60\x60\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x08\x00\x00\x3c\x7f\x47\x03\x03\x06\x0c\x18\x18\x18\x00\x18\x18'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x80\x00\x00\x80\x00'\
b'\x00\x80\x00\x7f\xff\x00\x60\x83\x00\x60\x83\x00\x60\x83\x00\x60'\
b'\x83\x00\x60\x83\x00\x7f\xff\x00\x60\x83\x00\x00\x80\x00\x00\x80'\
b'\x00\x00\x80\x00\x00\x80\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00'\
b'\x11\x00\x00\x00\x00\x3f\xfc\x00\x00\x04\x00\x00\x04\x00\x1f\xfc'\
b'\x00\x00\x04\x00\x00\x04\x00\xff\xff\x80\x00\xc0\x00\x30\xc2\x00'\
b'\x08\xac\x00\x02\xb0\x00\x0c\x98\x00\x70\x86\x00\xc0\x81\x00\x07'\
b'\x80\x00\x00\x00\x00\x00\x00\x00\x11\x00\x30\x0f\x00\x33\xf8\x00'\
b'\x31\x22\x00\xf9\x26\x00\x31\x24\x00\x37\xff\x80\x30\xe8\x00\x39'\
b'\xa6\x00\x72\x21\x80\xf7\xff\x00\x32\x23\x00\x33\xff\x00\x32\x23'\
b'\x00\x32\x23\x00\x33\xff\x00\xe2\x03\x00\x00\x00\x00\x00\x00\x00'\
b'\x11\x00\x18\x30\x00\x08\x20\x00\x00\x20\x00\xff\x7f\x80\x30\x42'\
b'\x00\x30\xe2\x00\x30\xa2\x00\x3e\x26\x00\x32\x24\x00\x32\x34\x00'\
b'\x22\x18\x00\x22\x18\x00\x62\x3c\x00\x42\x62\x00\x9e\x81\x80\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x80\x00\x00\xc0\x00'\
b'\x7f\xff\x00\x04\x18\x00\x04\x10\x00\xff\xff\x80\x00\x00\x00\x00'\
b'\x00\x00\x3f\xfc\x00\x30\x04\x00\x30\x04\x00\x3f\xfc\x00\x30\x04'\
b'\x00\x30\x04\x00\x3f\xfc\x00\x30\x04\x00'

_sparse =\
b'\x2e\x00\x03\x00\x3f\x00\x06\x00\x2d\x4e\x09\x00\x55\x5f\x10\x00'\
b'\xad\x64\x17\x00\x3e\x65\x1e\x00\xf3\x97\x25\x00'

_mvfont = memoryview(_font)
_mvsp = memoryview(_sparse)
ifb = lambda l : l[0] | (l[1] << 8)

def bs(lst, val):
    while True:
        m = (len(lst) & ~ 7) >> 1
        v = ifb(lst[m:])
        if v == val:
            return ifb(lst[m + 2:])
        if not m:
            return 0
        lst = lst[m:] if v < val else lst[:m]

def get_ch(ch):
    doff = bs(_mvsp, ord(ch)) << 3
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 16
    return _mvfont[doff + 2:next_offs], 16, width

